name: C# Code Format Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.cs'
      - '**.csproj'
      - '.editorconfig'
      - '.github/workflows/dotnet-format.yml'
  workflow_dispatch:
    inputs:
      check_all:
        description: 'Check all files (not just changed)'
        required: false
        default: 'false'
        type: boolean

env:
  # Gradually enable format checks
  # Phase 1: Check only whitespace issues (current)
  # Phase 2: Check code style issues
  # Phase 3: Full enforcement
  CHECK_PHASE: "whitespace_only"

jobs:
  check-format:
    runs-on: ubuntu-latest
    name: Check C# Format
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x  # Unity 6 uses .NET Standard 2.1 which is supported by .NET 6

    - name: Get changed files
      if: github.event_name == 'pull_request' && github.event.inputs.check_all != 'true'
      id: changed-files
      uses: tj-actions/changed-files@v44
      with:
        files: |
          **/*.cs
        separator: ' '
    
    - name: Check format
      run: |
        echo "üìã Format Check Configuration:"
        echo "  Phase: $CHECK_PHASE"
        echo "  Event: ${{ github.event_name }}"
        
        if [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ steps.changed-files.outputs.any_changed }}" = "true" ]; then
          echo "  Changed C# files:"
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "    - $file"
          done
        fi
        
        # Phase-based checking
        case "$CHECK_PHASE" in
          "whitespace_only")
            echo "\nüîç Phase 1: Checking whitespace formatting only"
            if [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ steps.changed-files.outputs.any_changed }}" = "true" ]; then
              # Check only changed files
              for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                echo "Checking: $file"
                dotnet format whitespace --include "$file" --verify-no-changes || exit 1
              done
            else
              # Check all files (manual run)
              echo "Checking all C# files..."
              dotnet format whitespace . --folder --exclude "**/Library/**" --exclude "**/Temp/**" --exclude "**/Packages/**" --exclude "**/obj/**" --verify-no-changes
            fi
            ;;
            
          "style_check")
            echo "\nüîç Phase 2: Checking code style issues"
            if [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ steps.changed-files.outputs.any_changed }}" = "true" ]; then
              for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                echo "Checking: $file"
                dotnet format style --include "$file" --verify-no-changes || exit 1
              done
            else
              dotnet format style . --folder --exclude "**/Library/**" --exclude "**/Temp/**" --exclude "**/Packages/**" --exclude "**/obj/**" --verify-no-changes
            fi
            ;;
            
          "full_enforcement")
            echo "\nüîç Phase 3: Full format enforcement"
            if [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ steps.changed-files.outputs.any_changed }}" = "true" ]; then
              for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                echo "Checking: $file"
                dotnet format --include "$file" --verify-no-changes || exit 1
              done
            else
              dotnet format . --folder --exclude "**/Library/**" --exclude "**/Temp/**" --exclude "**/Packages/**" --exclude "**/obj/**" --verify-no-changes
            fi
            ;;
            
          *)
            echo "‚ùå Unknown CHECK_PHASE: $CHECK_PHASE"
            exit 1
            ;;
        esac
        
        echo "\n‚úÖ Format check completed successfully"