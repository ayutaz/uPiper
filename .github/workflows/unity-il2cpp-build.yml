name: Unity Build Verification (Mono & IL2CPP)

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
      - '.github/workflows/unity-il2cpp-build.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
      - '.github/workflows/unity-il2cpp-build.yml'
  workflow_dispatch:
    inputs:
      testWindows:
        description: 'Test Windows IL2CPP build'
        required: false
        default: 'true'
        type: boolean
      testMacOS:
        description: 'Test macOS IL2CPP build'
        required: false
        default: 'true'
        type: boolean
      testLinux:
        description: 'Test Linux IL2CPP build'
        required: false
        default: 'true'
        type: boolean
      testAndroid:
        description: 'Test Android IL2CPP build'
        required: false
        default: 'true'
        type: boolean
      testWebGL:
        description: 'Test WebGL IL2CPP build'
        required: false
        default: 'true'
        type: boolean

jobs:
  il2cpp-compatibility-check:
    name: IL2CPP Compatibility Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        
    - name: Verify IL2CPP configuration files
      run: |
        echo "Checking IL2CPP configuration files..."
        
        # Check link.xml exists
        if [ ! -f "Assets/uPiper/link.xml" ]; then
          echo "❌ link.xml not found!"
          exit 1
        else
          echo "✅ link.xml found"
        fi
        
        # Check for Preserve attributes in critical files
        echo "Checking for [Preserve] attributes..."
        grep -r "\[Preserve\]" Assets/uPiper/Runtime/Core/ || true
        
        # List IL2CPP specific files
        echo "IL2CPP specific files:"
        find Assets/uPiper -name "*IL2CPP*" -type f | head -20

  build-unity:
    name: Build ${{ matrix.scriptingBackend }} - ${{ matrix.targetPlatform }}
    runs-on: ${{ matrix.os }}
    needs: il2cpp-compatibility-check
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows builds
          - targetPlatform: StandaloneWindows64
            os: ubuntu-latest
            scriptingBackend: Mono2x
          - targetPlatform: StandaloneWindows64
            os: ubuntu-latest
            scriptingBackend: IL2CPP
          # macOS builds
          - targetPlatform: StandaloneOSX
            os: ubuntu-latest
            scriptingBackend: Mono2x
          - targetPlatform: StandaloneOSX
            os: ubuntu-latest
            scriptingBackend: IL2CPP
          # Linux builds
          - targetPlatform: StandaloneLinux64
            os: ubuntu-latest
            scriptingBackend: Mono2x
          - targetPlatform: StandaloneLinux64
            os: ubuntu-latest
            scriptingBackend: IL2CPP
          # Android builds (IL2CPP only - Android doesn't support Mono)
          - targetPlatform: Android
            os: ubuntu-latest
            scriptingBackend: IL2CPP
          # WebGL builds (IL2CPP only - WebGL doesn't support Mono)
          - targetPlatform: WebGL
            os: ubuntu-latest
            scriptingBackend: IL2CPP
    
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        
    - name: Cache Library
      uses: actions/cache@v4
      with:
        path: Library
        key: Library-${{ matrix.scriptingBackend }}-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
        restore-keys: |
          Library-${{ matrix.scriptingBackend }}-${{ matrix.targetPlatform }}-
          Library-${{ matrix.targetPlatform }}-
          
    # Free up disk space for IL2CPP builds (they need more space)
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      if: matrix.os == 'ubuntu-latest'
      with:
        tool-cache: false
        android: ${{ matrix.targetPlatform != 'Android' }}
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
        
    # Setup IL2CPP support for Linux
    - name: Setup IL2CPP Linux
      if: matrix.targetPlatform == 'StandaloneLinux64'
      run: |
        sudo apt-get update
        sudo apt-get install -y clang gcc-multilib g++-multilib
        
    # Build Unity project
    - name: Build Unity project with ${{ matrix.scriptingBackend }}
      uses: game-ci/unity-builder@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        unityVersion: 6000.0.35f1
        targetPlatform: ${{ matrix.targetPlatform }}
        buildName: uPiper-${{ matrix.scriptingBackend }}
        buildsPath: build
        buildMethod: UnityBuilderAction.BuildScript.Build
        customParameters: -scriptingBackend ${{ matrix.scriptingBackend }}
        
    # Verify build output
    - name: Verify build output
      run: |
        echo "Checking ${{ matrix.scriptingBackend }} build output for ${{ matrix.targetPlatform }}..."
        BUILD_NAME="uPiper-${{ matrix.scriptingBackend }}"
        
        # Platform specific checks
        case "${{ matrix.targetPlatform }}" in
          StandaloneWindows64)
            if [ -f "build/${{ matrix.targetPlatform }}/${BUILD_NAME}.exe" ]; then
              echo "✅ Windows ${{ matrix.scriptingBackend }} executable found"
              ls -la "build/${{ matrix.targetPlatform }}/"
            else
              echo "❌ Windows ${{ matrix.scriptingBackend }} executable not found!"
              exit 1
            fi
            ;;
          StandaloneLinux64)
            if [ -f "build/${{ matrix.targetPlatform }}/${BUILD_NAME}" ]; then
              echo "✅ Linux ${{ matrix.scriptingBackend }} executable found"
              ls -la "build/${{ matrix.targetPlatform }}/"
            else
              echo "❌ Linux ${{ matrix.scriptingBackend }} executable not found!"
              exit 1
            fi
            ;;
          StandaloneOSX)
            if [ -d "build/${{ matrix.targetPlatform }}/${BUILD_NAME}.app" ]; then
              echo "✅ macOS ${{ matrix.scriptingBackend }} app bundle found"
              ls -la "build/${{ matrix.targetPlatform }}/"
            else
              echo "❌ macOS ${{ matrix.scriptingBackend }} app bundle not found!"
              exit 1
            fi
            ;;
          Android)
            if [ -f "build/${{ matrix.targetPlatform }}/${BUILD_NAME}.apk" ]; then
              echo "✅ Android ${{ matrix.scriptingBackend }} APK found"
              ls -la "build/${{ matrix.targetPlatform }}/"
            else
              echo "❌ Android ${{ matrix.scriptingBackend }} APK not found!"
              exit 1
            fi
            ;;
          WebGL)
            if [ -d "build/${{ matrix.targetPlatform }}/${BUILD_NAME}" ]; then
              echo "✅ WebGL ${{ matrix.scriptingBackend }} build found"
              ls -la "build/${{ matrix.targetPlatform }}/${BUILD_NAME}/"
            else
              echo "❌ WebGL ${{ matrix.scriptingBackend }} build not found!"
              exit 1
            fi
            ;;
        esac
        
    # Upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build-${{ matrix.scriptingBackend }}-${{ matrix.targetPlatform }}
        path: build/${{ matrix.targetPlatform }}
        retention-days: 7
        
  performance-comparison:
    name: Performance Report
    needs: build-unity
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate Build Summary
      run: |
        echo "# uPiper Build Verification Summary" > build-summary.md
        echo "" >> build-summary.md
        echo "## Build Matrix Status" >> build-summary.md
        echo "" >> build-summary.md
        echo "| Platform | Mono2x | IL2CPP | Notes |" >> build-summary.md
        echo "|----------|--------|--------|-------|" >> build-summary.md
        echo "| Windows 64-bit | ✅ | ✅ | Both backends supported |" >> build-summary.md
        echo "| macOS | ✅ | ✅ | Both backends supported |" >> build-summary.md
        echo "| Linux 64-bit | ✅ | ✅ | Both backends supported |" >> build-summary.md
        echo "| Android | N/A | ✅ | IL2CPP only platform |" >> build-summary.md
        echo "| WebGL | N/A | ✅ | IL2CPP only platform |" >> build-summary.md
        echo "" >> build-summary.md
        echo "## Build Configuration" >> build-summary.md
        echo "" >> build-summary.md
        echo "- Unity Version: 6000.0.35f1" >> build-summary.md
        echo "- link.xml: Present ✅" >> build-summary.md
        echo "- [Preserve] attributes: Applied ✅" >> build-summary.md
        echo "- Custom build script: UnityBuilderAction.BuildScript ✅" >> build-summary.md
        echo "" >> build-summary.md
        echo "## IL2CPP Optimizations" >> build-summary.md
        echo "" >> build-summary.md
        echo "- Type preservation via link.xml" >> build-summary.md
        echo "- Platform-specific settings:" >> build-summary.md
        echo "  - Android: ARM64 + ARMv7, Min API 21" >> build-summary.md
        echo "  - iOS: Universal architecture, Min iOS 11.0" >> build-summary.md
        echo "  - WebGL: WebAssembly target, 512MB memory" >> build-summary.md
        echo "" >> build-summary.md
        echo "## Mono vs IL2CPP Comparison" >> build-summary.md
        echo "" >> build-summary.md
        echo "| Aspect | Mono2x | IL2CPP |" >> build-summary.md
        echo "|--------|--------|--------|" >> build-summary.md
        echo "| Build Time | Fast ⚡ | Slower 🐢 |" >> build-summary.md
        echo "| Runtime Performance | Good | Better 🚀 |" >> build-summary.md
        echo "| Platform Support | Desktop | All platforms |" >> build-summary.md
        echo "| Debugging | Easy | Limited |" >> build-summary.md
        echo "| Code Security | Low | High 🔒 |" >> build-summary.md
        
    - name: Upload performance summary
      uses: actions/upload-artifact@v4
      with:
        name: Build-Summary
        path: build-summary.md
        retention-days: 7
        
    # Post summary as PR comment if this is a PR
    - name: Post IL2CPP summary to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('build-summary.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });