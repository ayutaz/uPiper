name: Unity Tests

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Unity Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        unity-version: [6000.0.35f1]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true
        
    - name: Create Unity license file
      run: |
        mkdir -p .licenses
        echo "${{ secrets.UNITY_LICENSE }}" | base64 -d > .licenses/Unity_v${{ matrix.unity-version }}.ulf
        
    - name: Run tests
      uses: game-ci/unity-test-runner@v4
      id: tests
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        unityVersion: ${{ matrix.unity-version }}
        testMode: all
        artifactsPath: test-results
        coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport'
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Test results
        path: test-results
        
    - name: Upload coverage results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Coverage results
        path: coverage
        
  validate-models:
    name: Validate Model Files
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check model files
      run: |
        echo "Checking for model files..."
        ls -la Assets/StreamingAssets/uPiper/Models/
        
        # Check Japanese model
        if [ ! -f "Assets/StreamingAssets/uPiper/Models/ja_JP-test-medium.onnx" ]; then
          echo "ERROR: Japanese model not found!"
          exit 1
        fi
        
        # Check English model
        if [ ! -f "Assets/StreamingAssets/uPiper/Models/test_voice.onnx" ]; then
          echo "ERROR: English model not found!"
          exit 1
        fi
        
        # Check file sizes
        ja_size=$(stat -c%s "Assets/StreamingAssets/uPiper/Models/ja_JP-test-medium.onnx" 2>/dev/null || stat -f%z "Assets/StreamingAssets/uPiper/Models/ja_JP-test-medium.onnx")
        en_size=$(stat -c%s "Assets/StreamingAssets/uPiper/Models/test_voice.onnx" 2>/dev/null || stat -f%z "Assets/StreamingAssets/uPiper/Models/test_voice.onnx")
        
        echo "Japanese model size: $((ja_size / 1024 / 1024))MB"
        echo "English model size: $((en_size / 1024 / 1024))MB"
        
        # Validate sizes (should be non-zero)
        if [ "$ja_size" -eq 0 ] || [ "$en_size" -eq 0 ]; then
          echo "ERROR: Model files are empty!"
          exit 1
        fi
        
        echo "All model files validated successfully!"